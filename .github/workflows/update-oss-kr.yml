name: Update kr.txt on OSS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    # 允许在 GitHub Actions 页面手动触发

jobs:
  update-oss-file:
    runs-on: ubuntu-latest
    
    steps:
      # 步骤1：检出仓库代码
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 完整检出历史记录

      # 步骤2：验证 kr.txt 文件是否存在
      - name: Verify kr.txt exists
        run: |
          echo "当前工作目录: $(pwd)"
          echo "目录文件列表:"
          ls -la
          
          if [ -f "./kr.txt" ]; then
            echo "✅ kr.txt 文件存在"
            echo "文件内容预览:"
            head -n 10 ./kr.txt
            echo "文件大小: $(wc -l < ./kr.txt) 行"
          else
            echo "❌ 错误：kr.txt 文件不存在！"
            echo "请确保 kr.txt 文件位于仓库根目录"
            exit 1
          fi

      # 步骤3：安装必要的工具
      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          echo "✅ 必要工具安装完成"

      # 步骤4：下载并配置 ossutil
      - name: Download and setup ossutil
        run: |
          # 清理可能存在的旧文件
          rm -rf ossutil* ossutil-v*
          
          echo "正在下载 ossutil..."
          # 下载 ossutil 2.x 版本（更稳定）
          wget "https://gosspublic.alicdn.com/ossutil/v2/2.1.2/ossutil-v2.1.2-linux-amd64.zip" -O ossutil.zip
          
          echo "正在解压..."
          unzip -q ossutil.zip
          
          echo "设置执行权限..."
          # 重命名以便统一使用
          cp ossutil-v2.1.2-linux-amd64/ossutil ./ossutil64
          chmod +x ./ossutil64
          
          echo "验证安装..."
          ./ossutil64 --version
          
          echo "✅ ossutil 安装完成"

      # 步骤5：验证 OSS 连接
      - name: Verify OSS connection
        run: |
          echo "测试 OSS 连接..."
          ./ossutil64 ls oss://kortv \
            -e oss-cn-hangzhou.aliyuncs.com \
            -i ${{ secrets.OSS_ACCESS_KEY_ID }} \
            -k ${{ secrets.OSS_ACCESS_KEY_SECRET }} || echo "⚠️  Bucket 可能为空或权限受限，但连接正常"
          echo "✅ OSS 连接测试完成"

      # 步骤6：上传 kr.txt 文件到 OSS
      - name: Upload kr.txt to OSS
        run: |
          echo "开始上传 kr.txt 文件到 OSS..."
          echo "源文件: ./kr.txt"
          echo "目标位置: oss://kortv/kr.txt"
          echo "Endpoint: oss-cn-hangzhou.aliyuncs.com"
          
          # 使用 ossutil 上传文件，-f 参数强制覆盖
          ./ossutil64 cp ./kr.txt oss://kortv/kr.txt -f \
            -e oss-cn-hangzhou.aliyuncs.com \
            -i ${{ secrets.OSS_ACCESS_KEY_ID }} \
            -k ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          
          echo "✅ 文件上传命令执行完成"

      # 步骤7：验证上传结果
      - name: Verify upload success
        run: |
          echo "验证文件上传结果..."
          
          # 检查文件是否存在于 OSS
          echo "检查 OSS 中的文件状态:"
          ./ossutil64 stat oss://kortv/kr.txt \
            -e oss-cn-hangzhou.aliyuncs.com \
            -i ${{ secrets.OSS_ACCESS_KEY_ID }} \
            -k ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          
          echo "🎉 kr.txt 文件已成功上传到阿里云 OSS！"

      # 步骤8：上传完成总结
      - name: Upload completion summary
        run: |
          echo "========================================"
          echo "🚀 OSS 文件同步任务完成！"
          echo "========================================"
          echo "📦 Bucket: kortv"
          echo "📄 文件: kr.txt"
          echo "📍 Endpoint: oss-cn-hangzhou.aliyuncs.com"
          echo "⏰ 完成时间: $(date)"
          echo "🔗 工作流详情: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "========================================"
